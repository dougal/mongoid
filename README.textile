<h2>Overview</h2>

<h3>About Mongoid</h3>

<p>
  Mongoid is an ODM (Object-Document-Mapper) framework for MongoDB in Ruby.
</p>

<h3>Project Tracking</h3>

<a href="http://www.pivotaltracker.com/projects/27482">Mongoid on Pivotal Tracker</a>
<a href="http://groups.google.com/group/mongoid">Mongoid Google Group</a>
<a href="http://mongoid.org:4444/">Mongoid on CI Joe</a>

<h3>Compatibility</h3>

<p>
  Mongoid is developed against Ruby 1.8.6, 1.8.7, 1.9.1, 1.9.2
</p>

<p>
  Note API changes will be frequent until the 1.0 release, and do not expect
  the gem to be of full production quality until that point.
</p>

<h2>Mongoid in Action</h2>

Initialize Mongoid:

<pre>
  Mongoid.connect_to("myapp_database_name")
</pre>

Example of a simple domain model:

<pre>
  class Person < Mongoid::Document
    field :title
    field :age, :default => 0
    has_many :addresses
    has_one :name
  end

  class Address < Mongoid::Document
    field :street
    field :city
    field :state
    field :post_code
    belongs_to :person
  end

  class Name < Mongoid::Document
    field :first_name
    field :last_name
    has_timestamps
  end
</pre>

Mongoid supports all the basic ActiveRecord creation and persistence methods.

Creation:

<pre>
  Person.create(:title => "Esquire")
  Person.create!(:title => "Sir", :name => { :first_name => "Elton", :last_name => "John" })
</pre>

Save:

<pre>
  person.save
  person.save!
</pre>

Updating:

<pre>
  person.update_attributes(:title => "Sir")
  person.update_attributes!(:name => { :first_name => "Emmanuel", :last_name => "Zorg" })
</pre>

Deleting:

<pre>
  person.destroy
  Person.destroy_all(:title => "Sir")
  person.delete
  Person.delete_all(:title => "Sir")
</pre>

Retrieval of Documents from the database can be done in the traditional ActiveRecord
manner or done using the Mongoid criteria DSL.

Old School:

<pre>
  Person.find(:all, :conditions => { :title => "Esquire" })
  Person.find(:first, :conditions => { :title => "Esquire" })
  Person.first(:conditions => { :title => "Sir" })
  Person.all(:conditions => { :title => "Sir" })
</pre>

New School:

<pre>
  Person.select(:first_name, :last_name).where(:title => "Sir").skip(10).limit(10).execute
  Criteria.translate(:conditions => { :title => "Sir" }).execute
</pre>

Paginate Document search results:

<pre>
  Person.paginate(:conditions => {:title => "Esquire"}, :page => 1, :per_page => 20)
</pre>

Validations:

Mongoid supports all validations provided by Jay Fields' <tt>Validatable</tt> gem.
For more information please see the <tt>Validatable</tt> documentation.

<a href="http://validatable.rubyforge.org/">Validatable on RubyForge</a>

<h2>License</h2>

<p>
  Copyright (c) 2009 Durran Jordan
</p>
<p>
  Permission is hereby granted, free of charge, to any person obtaining
  a copy of this software and associated documentation files (the
  "Software"), to deal in the Software without restriction, including
  without limitation the rights to use, copy, modify, merge, publish,
  distribute, sublicense, and/or sell copies of the Software, and to
  permit persons to whom the Software is furnished to do so, subject to
  the following conditions:
</p>
<p>
  The above copyright notice and this permission notice shall be
  included in all copies or substantial portions of the Software.
</p>
<p>
  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
  LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
  OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
  WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
</p>

<h2>Credits</h2>

Durran Jordan: durran at gmail dot com
